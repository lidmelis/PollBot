"""Initial

Revision ID: b5729a7ddb2b
Revises: 
Create Date: 2025-06-02 20:14:11.031538

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b5729a7ddb2b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('replies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('peer_id', sa.Integer(), nullable=False),
    sa.Column('reply', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_replies_id'), 'replies', ['id'], unique=False)
    op.create_index(op.f('ix_replies_peer_id'), 'replies', ['peer_id'], unique=False)
    op.create_index(op.f('ix_replies_question_id'), 'replies', ['question_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('peer_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_peer_id'), 'users', ['peer_id'], unique=True)
    op.create_table('polls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('peer_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('is_single_use', sa.Boolean(), nullable=True),
    sa.Column('first_question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['peer_id'], ['users.peer_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_polls_id'), 'polls', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('with_options', sa.Boolean(), nullable=False),
    sa.Column('with_multipy_options', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('next_question_id', sa.Integer(), nullable=True),
    sa.Column('prev_question_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['poll_id'], ['polls.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_id'), 'questions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_questions_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_polls_id'), table_name='polls')
    op.drop_table('polls')
    op.drop_index(op.f('ix_users_peer_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_replies_question_id'), table_name='replies')
    op.drop_index(op.f('ix_replies_peer_id'), table_name='replies')
    op.drop_index(op.f('ix_replies_id'), table_name='replies')
    op.drop_table('replies')
    # ### end Alembic commands ###
